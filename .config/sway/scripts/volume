#!/bin/bash
# change the Volume
# -inc     increase volume
# -dec     decrease volume
# -toggle  mute/unmute speaker
# -mic     mute/unmute mic

volume_high=/usr/share/icons/breeze/status/16/audio-volume-high.svg
volume_muted=/usr/share/icons/breeze/status/16/audio-volume-muted.svg

ICON_PATH=/usr/share/icons/Dracula/22/actions

volume_overampped=${ICON_PATH}/audio-volume-overamplified-symbolic.svg
volume_high=${ICON_PATH}/audio-volume-high.svg
volume_medium=${ICON_PATH}/audio-volume-medium.svg
volume_low=${ICON_PATH}/audio-volume-low.svg
volume_muted=${ICON_PATH}/audio-volume-muted.svg

# Change the volume using pulseaudio
case "$1" in
  -inc)
    pactl set-sink-volume @DEFAULT_SINK@ +5%
    ;;
  -dec)
    pactl set-sink-volume @DEFAULT_SINK@ -5%
    ;;
  -toggle)
    pactl set-sink-mute @DEFAULT_SINK@ toggle
    ;;
  -mic)
    pactl set-source-mute @DEFAULT_SINK@ toggle
    ;;
esac

# Arbitrary but unique message tag
msgTag="myvolume"


# Query pactl for the current volume and whether or not the speaker is muted
volume=$(pactl get-sink-volume @DEFAULT_SINK@ |head -1|awk '{print $5}' |sed 's|[^0-9]*||g')
mute=$(pactl get-sink-mute @DEFAULT_SINK@ | awk '{print $2}' |sed 's|[^a-z]*||g')
if [[ $volume == 0 || "$mute" == "yes" ]]; then
    # Show the sound muted notification
    dunstify -a "changeVolume" -u low -i $volume_muted -h "string:x-dunst-stack-tag:$msgTag" "Volume muted" 
elif [[ $volume -gt 0 && $volume -le 30 ]]
then
    # Show the volume notification
    dunstify -a "changeVolume" -u low -i $volume_low -h "string:x-dunst-stack-tag:$msgTag" \
    -h int:value:"$volume" "Volume: ${volume}%"
elif [[ $volume -gt 30 && $volume -le 65 ]]
then
    # Show the volume notification
    dunstify -a "changeVolume" -u low -i $volume_medium -h "string:x-dunst-stack-tag:$msgTag" \
    -h int:value:"$volume" "Volume: ${volume}%"
elif [[ $volume -gt 65 ]]
then
    # Show the volume notification
    dunstify -a "changeVolume" -u low -i $volume_high -h "string:x-dunst-stack-tag:$msgTag" \
    -h int:value:"$volume" "Volume: ${volume}%"
fi

# Play the volume changed sound
canberra-gtk-play -i audio-volume-change -d "changeVolume"
